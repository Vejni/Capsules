Tue Apr 27 12:42:14 BST 2021
cgpu01.maxwell.local

Currently Loaded Modules:
  1) slurm/current   2) python-3.7.7   3) anaconda3

 

PatchWiseModel(
  (features): Sequential(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): Conv2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (10): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU(inplace=True)
    (12): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): ReLU(inplace=True)
    (15): Conv2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
    (16): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): ReLU(inplace=True)
    (18): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): ReLU(inplace=True)
    (21): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): ReLU(inplace=True)
    (24): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
    (25): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
  )
  (classifier): Sequential(
    (0): Linear(in_features=12288, out_features=2, bias=True)
  )
)
Parameters: 119141
Trainable parameters: 119141
Using: cuda
Start training network: 2021/04/27 12:42

Using  44288 training samples
Using  1186 validation samples
Model loaded, trained for  4 epochs
Epoch 5/5
----------
&train Loss: 0.1833 Acc: 0.9258
&val Loss: 0.2497 Acc: 0.8963
Training complete in 78m 15s
Best Validation Accuracy: 0.896290

Confusion matrix
 tensor([[302.,  64.],
        [ 39., 782.]])
Class 0
TP 302.0, TN 782.0, FP 39.0, FN 64.0
Sensitivity 0.83, Specificity 0.95, F1 0.85, Accuracy 0.91
Class 1
TP 782.0, TN 302.0, FP 64.0, FN 39.0
Sensitivity 0.95, Specificity 0.83, F1 0.94, Accuracy 0.91

Training Accuracy of the model: 0.96 %
[0.1832728685240525]
[0.249703094212442]
[tensor(0.9258, dtype=torch.float64)]
[tensor(0.8963, dtype=torch.float64)]
Model saved: /uoa/home/u02mv17/Repository/models/_Breakhis_patchwise__Breakhis_patchwise_2021-04-27_12-42.ckpt



Setting Linear Layer with shape: torch.Size([32, 16, 46, 46])
BaseCNN(
  (patch_wise_model): PatchWiseModel(
    (features): Sequential(
      (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
      (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
      (9): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (10): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace=True)
      (12): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace=True)
      (15): Conv2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
      (16): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace=True)
      (18): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (20): ReLU(inplace=True)
      (21): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (22): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (23): ReLU(inplace=True)
      (24): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
      (25): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
    )
    (classifier): Sequential(
      (0): Linear(in_features=12288, out_features=2, bias=True)
    )
  )
  (cnn_layers): Sequential(
    (0): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), bias=False)
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=1, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), bias=False)
    (5): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU(inplace=True)
    (7): MaxPool2d(kernel_size=3, stride=1, padding=0, dilation=1, ceil_mode=False)
    (8): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): MaxPool2d(kernel_size=3, stride=1, padding=0, dilation=1, ceil_mode=False)
  )
  (linear_layers): Sequential(
    (0): Linear(in_features=33856, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Linear(in_features=64, out_features=32, bias=True)
    (4): ReLU(inplace=True)
    (5): Linear(in_features=32, out_features=2, bias=True)
  )
)
Parameters: 2329095
Trainable parameters: 2329095
Using: cuda
Start training network: 2021/04/27 14:08

Using  44288 training samples
Using  1186 validation samples
Epoch 1/10

train Loss: 0.2237 Acc: 0.9110

val Loss: 0.1813 Acc: 0.9224
Epoch 2/10
----------
train Loss: 0.2020 Acc: 0.9204

val Loss: 0.1807 Acc: 0.9351
Epoch 3/10
---------
train Loss: 0.1899 Acc: 0.9246

val Loss: 0.1751 Acc: 0.9376
Epoch 4/10
----------
train Loss: 0.1774 Acc: 0.9290

val Loss: 0.1775 Acc: 0.9427
Epoch 5/10
----------
train Loss: 0.1710 Acc: 0.9323

val Loss: 0.1703 Acc: 0.9418
Epoch 6/10
----------
train Loss: 0.1617 Acc: 0.9361
val Loss: 0.1532 Acc: 0.9410
Epoch 7/10
----------
train Loss: 0.1572 Acc: 0.9384

val Loss: 0.1757 Acc: 0.9536
Epoch 8/10
----------
train Loss: 0.1482 Acc: 0.9399

val Loss: 0.1510 Acc: 0.9494
Epoch 9/10
----------
train Loss: 0.1455 Acc: 0.9422

val Loss: 0.1575 Acc: 0.9511
Epoch 10/10
----------
train Loss: 0.1431 Acc: 0.9436

val Loss: 0.1445 Acc: 0.9494
Training complete in 971m 59s
Best Validation Accuracy: 0.953626
Test Accuracy of the model: 0.95 %

Confusion matrix
 tensor([[345.,  21.],
        [ 38., 783.]])
Class 0
TP 345.0, TN 783.0, FP 38.0, FN 21.0
Sensitivity 0.94, Specificity 0.95, F1 0.92, Accuracy 0.95
Class 1
TP 783.0, TN 345.0, FP 21.0, FN 38.0
Sensitivity 0.95, Specificity 0.94, F1 0.96, Accuracy 0.95
Training Accuracy of the model: 0.96 %
[0.22369235614045507, 0.20197285770309412, 0.18985187303748607, 0.17742883354140113, 0.17101107817143202, 0.1617066965127536, 0.15720684450076666, 0.1482469280475126, 0.14553774279378073, 0.14306611932727986]
[0.1812638465918186, 0.1807109647655065, 0.17505632137367738, 0.17748072054347064, 0.1703204499026776, 0.15320142563338224, 0.1757191494986665, 0.15098414438168878, 0.15751056908354993, 0.14449057276368543]
[tensor(0.9110, dtype=torch.float64), tensor(0.9204, dtype=torch.float64), tensor(0.9246, dtype=torch.float64), tensor(0.9290, dtype=torch.float64), tensor(0.9323, dtype=torch.float64), tensor(0.9361, dtype=torch.float64), tensor(0.9384, dtype=torch.float64), tensor(0.9399, dtype=torch.float64), tensor(0.9422, dtype=torch.float64), tensor(0.9436, dtype=torch.float64)]
[tensor(0.9224, dtype=torch.float64), tensor(0.9351, dtype=torch.float64), tensor(0.9376, dtype=torch.float64), tensor(0.9427, dtype=torch.float64), tensor(0.9418, dtype=torch.float64), tensor(0.9410, dtype=torch.float64), tensor(0.9536, dtype=torch.float64), tensor(0.9494, dtype=torch.float64), tensor(0.9511, dtype=torch.float64), tensor(0.9494, dtype=torch.float64)]
Model saved: /uoa/home/u02mv17/Repository/models/_Breakhis_imagewise_BaseCNN_Breakhis_imagewise_BaseCNN2021-04-27_14-08.ckpt
Wed Apr 28 06:27:42 BST 2021
