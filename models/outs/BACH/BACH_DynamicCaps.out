Sat May 22 15:24:33 BST 2021
cgpu03.maxwell.local

Currently Loaded Modules:
  1) slurm/current   2) cudatoolkit-10.1.168

 

/tmp/slurmd/job788918/slurm_script: line 20: activate: No such file or directory
Sat May 22 15:24:36 2021       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 450.51.05    Driver Version: 450.51.05    CUDA Version: 11.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  GeForce RTX 208...  Off  | 00000000:2F:00.0 Off |                  N/A |
| 31%   46C    P0    60W / 250W |      0MiB / 11019MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  GeForce RTX 208...  Off  | 00000000:86:00.0 Off |                  N/A |
| 37%   47C    P0    40W / 250W |      0MiB / 11019MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Namespace(augment=False, batch_size=32, checkpoint_path='/uoa/home/u02mv17/Repository/models/checkpoints/', classes=4, data_path='/uoa/home/u02mv17/Repository/data/ICIAR2018/patchwise_dataset/', epochs=58, flip=False, input_size=[3, 512, 512], lr=0.001, name='_BACH_patchwise_original_noaug_', output_size=[3, 64, 64], predefined_stats=False, workers=4) Namespace(arch=[64, 16, 8, 8], augment=True, batch_size=16, checkpoint_path='/uoa/home/u02mv17/Repository/models/checkpoints/', classes=4, data_path='/uoa/home/u02mv17/Repository/data/ICIAR2018/imagewise_dataset/', epochs=10, flip=False, input_size=[3, 64, 64], lam_recon=0.392, lr=0.0001, lr_decay=0.9, name='_BACH_imagewise_DynamicCapsules_', output_size=[3, 64, 64], pose_dim=4, predefined_stats=False, routings=3, workers=4)
PatchWiseModel(
  (features): Sequential(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): Conv2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (10): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU(inplace=True)
    (12): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): ReLU(inplace=True)
    (15): Conv2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
    (16): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): ReLU(inplace=True)
    (18): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): ReLU(inplace=True)
    (21): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (22): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): ReLU(inplace=True)
    (24): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
    (25): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (28): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (29): ReLU(inplace=True)
    (30): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): ReLU(inplace=True)
    (33): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (34): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (35): ReLU(inplace=True)
    (36): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (37): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): ReLU(inplace=True)
    (39): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (40): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (41): ReLU(inplace=True)
    (42): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (43): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): ReLU(inplace=True)
    (45): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
  )
  (classifier): Sequential(
    (0): Linear(in_features=12288, out_features=4, bias=True)
  )
)
Parameters: 1990951
Trainable parameters: 1990951
Using: cuda
GeForce RTX 2080 Ti
Memory Usage:
Allocated: 0.0 GB
Cached:    0.0 GB
Start training network: 2021/05/22 15:24

Using  9800 training samples
Using  2100 validation samples
Model loaded, trained for  58 epochs
Training complete in 0m 0s
Best Validation Accuracy: 0.000000
Test Accuracy of the model: 0.71
Confusion matrix
 tensor([[399.,  36.,  47.,  43.],
        [ 15., 304.,  58.,  43.],
        [ 56., 138., 362.,  39.],
        [ 44.,  64.,  26., 426.]])
Class 0
TP 399.0, TN 1460.0, FP 115.0, FN 126.0
Sensitivity 0.76, Specificity 0.93, F1 0.77, Accuracy 0.89
Class 1
TP 304.0, TN 1442.0, FP 238.0, FN 116.0
Sensitivity 0.72, Specificity 0.86, F1 0.63, Accuracy 0.83
Class 2
TP 362.0, TN 1374.0, FP 131.0, FN 233.0
Sensitivity 0.61, Specificity 0.91, F1 0.67, Accuracy 0.83
Class 3
TP 426.0, TN 1415.0, FP 125.0, FN 134.0
Sensitivity 0.76, Specificity 0.92, F1 0.77, Accuracy 0.88
Training Accuracy of the model: 0.96
Model saved: /uoa/home/u02mv17/Repository/models/_BACH_patchwise_original_noaug__BACH_patchwise_original_noaug_2021-05-22_15-24.ckpt
DynamicCapsules(
  (patch_wise_model): PatchWiseModel(
    (features): Sequential(
      (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
      (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
      (9): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (10): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace=True)
      (12): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace=True)
      (15): Conv2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
      (16): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace=True)
      (18): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (20): ReLU(inplace=True)
      (21): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (22): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (23): ReLU(inplace=True)
      (24): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
      (25): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (28): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (29): ReLU(inplace=True)
      (30): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (32): ReLU(inplace=True)
      (33): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (34): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (35): ReLU(inplace=True)
      (36): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (37): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (38): ReLU(inplace=True)
      (39): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (40): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (41): ReLU(inplace=True)
      (42): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (43): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (44): ReLU(inplace=True)
      (45): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    )
    (classifier): Sequential(
      (0): Linear(in_features=12288, out_features=4, bias=True)
    )
  )
  (conv1): Conv2d(3, 64, kernel_size=(9, 9), stride=(1, 1))
  (primarycaps): PrimaryCapsule(
    (conv2d): Conv2d(64, 64, kernel_size=(9, 9), stride=(2, 2))
  )
  (digitcaps): DenseCapsule()
  (decoder): Sequential(
    (0): Linear(in_features=64, out_features=512, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=512, out_features=1024, bias=True)
    (3): ReLU(inplace=True)
    (4): Linear(in_features=1024, out_features=12288, bias=True)
    (5): Sigmoid()
  )
  (relu): ReLU()
)
Parameters: 17851495
Trainable parameters: 17851495
Using: cuda
GeForce RTX 2080 Ti
Memory Usage:
Allocated: 0.1 GB
Cached:    0.2 GB
Start training network: 2021/05/22 15:28

Using  13440 training samples
Using  720 validation samples
Epoch 1/10
----------
train Loss: 0.2067 Acc: 0.7312
val Loss: 0.2521 Acc: 0.6500
Epoch 2/10
----------
train Loss: 0.1603 Acc: 0.7860
val Loss: 0.2432 Acc: 0.6722
Epoch 3/10
----------
train Loss: 0.1512 Acc: 0.7943
val Loss: 0.2547 Acc: 0.6361
Epoch 4/10
----------
train Loss: 0.1429 Acc: 0.8051
val Loss: 0.2478 Acc: 0.6750
Epoch 5/10
----------
train Loss: 0.1416 Acc: 0.8083
val Loss: 0.2356 Acc: 0.6681
Epoch 6/10
----------
train Loss: 0.1319 Acc: 0.8205
val Loss: 0.2286 Acc: 0.6694
Epoch 7/10
----------
train Loss: 0.1288 Acc: 0.8267
val Loss: 0.2345 Acc: 0.6694
Epoch 8/10
----------
train Loss: 0.1260 Acc: 0.8290
val Loss: 0.2310 Acc: 0.6736
Epoch 9/10
----------
train Loss: 0.1245 Acc: 0.8313
val Loss: 0.2348 Acc: 0.6764
Epoch 10/10
----------
train Loss: 0.1208 Acc: 0.8357
val Loss: 0.2258 Acc: 0.6833
Training complete in 158m 5s
Best Validation Accuracy: 0.683333
Test Accuracy of the model: 0.67
Average Confidence: 77.22
Test Accuracy of the model on with majority voting: 0.75
Test Accuracy of the model on with sum voting: 0.78
Test Accuracy of the model on with max voting: 0.73
Confusion matrix
 tensor([[130.,  25.,   7.,  18.],
        [  8., 106.,  14.,  16.],
        [ 36.,  39., 117.,  12.],
        [ 18.,  36.,   6., 132.]])
Class 0
TP 130.0, TN 478.0, FP 62.0, FN 50.0
Sensitivity 0.72, Specificity 0.89, F1 0.70, Accuracy 0.84
Class 1
TP 106.0, TN 476.0, FP 100.0, FN 38.0
Sensitivity 0.74, Specificity 0.83, F1 0.61, Accuracy 0.81
Class 2
TP 117.0, TN 489.0, FP 27.0, FN 87.0
Sensitivity 0.57, Specificity 0.95, F1 0.67, Accuracy 0.84
Class 3
TP 132.0, TN 482.0, FP 46.0, FN 60.0
Sensitivity 0.69, Specificity 0.91, F1 0.71, Accuracy 0.85
Training Accuracy of the model: 0.92
Model saved: /uoa/home/u02mv17/Repository/models/_BACH_imagewise_DynamicCapsules__BACH_imagewise_DynamicCapsules_2021-05-22_15-28.ckpt
Sat May 22 18:08:05 BST 2021
